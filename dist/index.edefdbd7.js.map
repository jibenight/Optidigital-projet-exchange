{"mappings":"AACA,MAAMA,IAAM,iCACNC,QAAU,oCAGhB,IAAIC,OAASC,SAASC,eAAe,UAEjCC,UAAY,GAEhB,MAAMC,SAAQ,KACZ,MAAMC,EAAYJ,SAASK,cAAc,gBAEnCC,EAAY,IAAIC,KAAKH,EAAUI,OACrCN,UAAUO,KAAKL,EAAUI,OACzB,MAAME,EAAU,IAAIH,KAAKD,GACzB,IAAK,IAAIK,EAAQ,EAAGA,EAAQ,EAAGA,IAC7BD,EAAQE,QAAQF,EAAQG,UAAY,GACpCX,UAAUO,KAAKC,EAAQI,qBAAqBC,MAAM,KAAKC,UAAUC,KAAK,MAExEC,YAGIA,SAAQC,gBACNC,QAAQC,IACZnB,UAAUoB,KAAGH,MAAOI,IAClB,MAAMC,QAAiBC,MAAM5B,IAAM0B,EAAQzB,SAC3C,IAAI4B,QAAaF,EAASG,OAC1BC,KAAKF,QAMX,IAAIE,KAAOF,IAET,IACIG,EAAG,2BAFQ,IAAItB,KAAKmB,EAAKI,MACPhB,yCAIZY,EAAKK,MAAMC,uBACXN,EAAKK,MAAME,uBACXP,EAAKK,MAAMG,uBACXR,EAAKK,MAAMI,gCAIjBC,EAAIpC,SAASqC,cAAc,KAC/BD,EAAEE,YAAW,QAAWZ,EAAKK,MAAMC,YAAYN,EAAKK,MAAMC,aAAaN,EAAKK,MAAMG,aAAaR,EAAKK,MAAMI,MAGtGT,EAAKI,MAAQ5B,UAAU,IACzBF,SAASC,eAAe,QAAQsC,YAAYH,GAE9CpC,SAASC,eAAe,aAAauC,WAAaX,GAGpD,MAAMY,QAAO,KACXvC,UAAY,GACZF,SAASC,eAAe,aAAauC,UAAY,GACjDxC,SAASC,eAAe,QAAQuC,UAAY,IAG9CE,OAAOC,iBAAiB,OAAQxC,UAChCJ,OAAO4C,iBACL,SACAC,IACEA,EAAEC,eATJ3C,UAAY,GACZF,SAASC,eAAe,aAAauC,UAAY,GACjDxC,SAASC,eAAe,QAAQuC,UAAY,GAS1CM,YAAU,KACR3C,aACC,QAEL","sources":["src/js/api.js"],"sourcesContent":["//api from fixer.io\nconst url = 'https://api.exchangerate.host/';\nconst symbols = '?base=CHF&symbols=EUR,USD,JPY,GBP';\n\n// capture the date\nlet bouton = document.getElementById('reload');\n//let input = document.getElementById('date-string');\nlet arrayDate = [];\n\nconst loadDate = () => {\n  const inputDate = document.querySelector('#date-string');\n  // add 5 new dates\n  const firstDate = new Date(inputDate.value);\n  arrayDate.push(inputDate.value);\n  const newDate = new Date(firstDate);\n  for (let index = 0; index < 4; index++) {\n    newDate.setDate(newDate.getDate() + 1);\n    arrayDate.push(newDate.toLocaleDateString().split('/').reverse().join('-'));\n  }\n  exchange();\n};\n\nconst exchange = async () => {\n  await Promise.all(\n    arrayDate.map(async dates => {\n      const response = await fetch(url + dates + symbols);\n      let data = await response.json();\n      show(data);\n    })\n  );\n};\n\n// show the data\nlet show = data => {\n  const events = new Date(data.date);\n  let euroDate = events.toLocaleDateString();\n  let tab = `\n      <tr>\n      <td>${euroDate} </td>\n      <td>${data.rates.EUR}</td>\n      <td>${data.rates.USD}</td>\n      <td>${data.rates.JPY}</td>\n      <td>${data.rates.GBP}</td>\n      </tr>\n      `;\n\n  let p = document.createElement('p');\n  p.textContent = `EURO:${data.rates.EUR} - USD${data.rates.EUR} - JPY:${data.rates.JPY} - GBP:${data.rates.GBP}`;\n\n  // ADD in HTML\n  if (data.date == arrayDate[0]) {\n    document.getElementById('info').appendChild(p);\n  }\n  document.getElementById('list-rate').innerHTML += tab;\n};\n\nconst refresh = () => {\n  arrayDate = [];\n  document.getElementById('list-rate').innerHTML = '';\n  document.getElementById('info').innerHTML = '';\n};\n\nwindow.addEventListener('load', loadDate);\nbouton.addEventListener(\n  'click',\n  e => {\n    e.preventDefault;\n    refresh();\n    setTimeout(() => {\n      loadDate();\n    }, 500);\n  },\n  false\n);\n"],"names":["url","symbols","bouton","document","getElementById","arrayDate","loadDate","inputDate","querySelector","firstDate","Date","value","push","newDate","index","setDate","getDate","toLocaleDateString","split","reverse","join","exchange","async","Promise","all","map","dates","response","fetch","data","json","show","tab","date","rates","EUR","USD","JPY","GBP","p","createElement","textContent","appendChild","innerHTML","refresh","window","addEventListener","e","preventDefault","setTimeout"],"version":3,"file":"index.edefdbd7.js.map"}